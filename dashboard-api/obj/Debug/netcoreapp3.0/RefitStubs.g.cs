// <auto-generated />
using System;
using System.Net.Http;
using System.Collections.Generic;
using Refit;
using System.Threading.Tasks;
using dashboardAPI.Models;

/* ******** Hey You! *********
 *
 * This is a generated file, and gets rewritten every time you build the
 * project. If you want to edit it, you need to edit the mustache template
 * in the Refit package */

#pragma warning disable
namespace tmp.RefitInternalGenerated
{
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [AttributeUsage (AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Delegate)]
    sealed class PreserveAttribute : Attribute
    {

        //
        // Fields
        //
        public bool AllMembers;

        public bool Conditional;
    }
}
#pragma warning restore

namespace dashboardAPI.Clients
{
    using tmp.RefitInternalGenerated;

    /// <inheritdoc />
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [Preserve]
    [global::System.Reflection.Obfuscation(Exclude=true)]
    partial class AutoGeneratedAccountClient : AccountClient
    {
        /// <inheritdoc />
        public HttpClient Client { get; protected set; }
        readonly IRequestBuilder requestBuilder;

        /// <inheritdoc />
        public AutoGeneratedAccountClient(HttpClient client, IRequestBuilder requestBuilder)
        {
            Client = client;
            this.requestBuilder = requestBuilder;
        }

        /// <inheritdoc />
        Task<string> AccountClient.GetAccountAsync(string authorization, string summonerName)
        {
            var arguments = new object[] { authorization, summonerName };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetAccountAsync", new Type[] { typeof(string), typeof(string) });
            return (Task<string>)func(Client, arguments);
        }
    }
}

namespace dashboardAPI.Clients
{
    using tmp.RefitInternalGenerated;

    /// <inheritdoc />
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [Preserve]
    [global::System.Reflection.Obfuscation(Exclude=true)]
    partial class AutoGeneratedDragonClient : DragonClient
    {
        /// <inheritdoc />
        public HttpClient Client { get; protected set; }
        readonly IRequestBuilder requestBuilder;

        /// <inheritdoc />
        public AutoGeneratedDragonClient(HttpClient client, IRequestBuilder requestBuilder)
        {
            Client = client;
            this.requestBuilder = requestBuilder;
        }

        /// <inheritdoc />
        Task<string> DragonClient.GetAllChampAsync()
        {
            var arguments = new object[] {  };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetAllChampAsync", new Type[] {  });
            return (Task<string>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<string> DragonClient.GetAllItemsAsync()
        {
            var arguments = new object[] {  };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetAllItemsAsync", new Type[] {  });
            return (Task<string>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<string> DragonClient.GetAllSummonersAsync()
        {
            var arguments = new object[] {  };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetAllSummonersAsync", new Type[] {  });
            return (Task<string>)func(Client, arguments);
        }
    }
}

namespace dashboardAPI.Clients
{
    using tmp.RefitInternalGenerated;

    /// <inheritdoc />
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [Preserve]
    [global::System.Reflection.Obfuscation(Exclude=true)]
    partial class AutoGeneratedLolGameClient : LolGameClient
    {
        /// <inheritdoc />
        public HttpClient Client { get; protected set; }
        readonly IRequestBuilder requestBuilder;

        /// <inheritdoc />
        public AutoGeneratedLolGameClient(HttpClient client, IRequestBuilder requestBuilder)
        {
            Client = client;
            this.requestBuilder = requestBuilder;
        }

        /// <inheritdoc />
        Task<string> LolGameClient.GetGameAsync(string authorization, long matchId)
        {
            var arguments = new object[] { authorization, matchId };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetGameAsync", new Type[] { typeof(string), typeof(long) });
            return (Task<string>)func(Client, arguments);
        }
    }
}

namespace dashboardAPI.Clients
{
    using tmp.RefitInternalGenerated;

    /// <inheritdoc />
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [Preserve]
    [global::System.Reflection.Obfuscation(Exclude=true)]
    partial class AutoGeneratedLolHistoryClient : LolHistoryClient
    {
        /// <inheritdoc />
        public HttpClient Client { get; protected set; }
        readonly IRequestBuilder requestBuilder;

        /// <inheritdoc />
        public AutoGeneratedLolHistoryClient(HttpClient client, IRequestBuilder requestBuilder)
        {
            Client = client;
            this.requestBuilder = requestBuilder;
        }

        /// <inheritdoc />
        Task<string> LolHistoryClient.GetListHistoryAsync(string authorization, string encryptedAccountId)
        {
            var arguments = new object[] { authorization, encryptedAccountId };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetListHistoryAsync", new Type[] { typeof(string), typeof(string) });
            return (Task<string>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<string> LolHistoryClient.GetListHistoryByChampAsync(string authorization, string encryptedAccountId, int endIndex)
        {
            var arguments = new object[] { authorization, encryptedAccountId, endIndex };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetListHistoryByChampAsync", new Type[] { typeof(string), typeof(string), typeof(int) });
            return (Task<string>)func(Client, arguments);
        }
    }
}

namespace dashboardAPI.Clients
{
    using tmp.RefitInternalGenerated;

    /// <inheritdoc />
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [Preserve]
    [global::System.Reflection.Obfuscation(Exclude=true)]
    partial class AutoGeneratedLolMasteryAccountClient : LolMasteryAccountClient
    {
        /// <inheritdoc />
        public HttpClient Client { get; protected set; }
        readonly IRequestBuilder requestBuilder;

        /// <inheritdoc />
        public AutoGeneratedLolMasteryAccountClient(HttpClient client, IRequestBuilder requestBuilder)
        {
            Client = client;
            this.requestBuilder = requestBuilder;
        }

        /// <inheritdoc />
        Task<AccountModel> LolMasteryAccountClient.GetUserAsync(string summonerName)
        {
            var arguments = new object[] { summonerName };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetUserAsync", new Type[] { typeof(string) });
            return (Task<AccountModel>)func(Client, arguments);
        }
    }
}

namespace dashboardAPI.Clients
{
    using tmp.RefitInternalGenerated;

    /// <inheritdoc />
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [Preserve]
    [global::System.Reflection.Obfuscation(Exclude=true)]
    partial class AutoGeneratedLolMasteryClient : LolMasteryClient
    {
        /// <inheritdoc />
        public HttpClient Client { get; protected set; }
        readonly IRequestBuilder requestBuilder;

        /// <inheritdoc />
        public AutoGeneratedLolMasteryClient(HttpClient client, IRequestBuilder requestBuilder)
        {
            Client = client;
            this.requestBuilder = requestBuilder;
        }

        /// <inheritdoc />
        Task<string> LolMasteryClient.GetMasteryAsync(string authorization, string encryptedSummonerId)
        {
            var arguments = new object[] { authorization, encryptedSummonerId };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetMasteryAsync", new Type[] { typeof(string), typeof(string) });
            return (Task<string>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<string> LolMasteryClient.GetDetailsMasteryAsync(string authorization, string encryptedSummonerId)
        {
            var arguments = new object[] { authorization, encryptedSummonerId };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetDetailsMasteryAsync", new Type[] { typeof(string), typeof(string) });
            return (Task<string>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<string> LolMasteryClient.GetAllChampAsync()
        {
            var arguments = new object[] {  };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetAllChampAsync", new Type[] {  });
            return (Task<string>)func(Client, arguments);
        }
    }
}

namespace dashboardAPI.Clients
{
    using tmp.RefitInternalGenerated;

    /// <inheritdoc />
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [Preserve]
    [global::System.Reflection.Obfuscation(Exclude=true)]
    partial class AutoGeneratedLolRotationClient : LolRotationClient
    {
        /// <inheritdoc />
        public HttpClient Client { get; protected set; }
        readonly IRequestBuilder requestBuilder;

        /// <inheritdoc />
        public AutoGeneratedLolRotationClient(HttpClient client, IRequestBuilder requestBuilder)
        {
            Client = client;
            this.requestBuilder = requestBuilder;
        }

        /// <inheritdoc />
        Task<string> LolRotationClient.GetRotationChampionsAsync(string authorization)
        {
            var arguments = new object[] { authorization };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetRotationChampionsAsync", new Type[] { typeof(string) });
            return (Task<string>)func(Client, arguments);
        }
    }
}

namespace dashboardAPI.Clients
{
    using tmp.RefitInternalGenerated;

    /// <inheritdoc />
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [Preserve]
    [global::System.Reflection.Obfuscation(Exclude=true)]
    partial class AutoGeneratedTftClient : TftClient
    {
        /// <inheritdoc />
        public HttpClient Client { get; protected set; }
        readonly IRequestBuilder requestBuilder;

        /// <inheritdoc />
        public AutoGeneratedTftClient(HttpClient client, IRequestBuilder requestBuilder)
        {
            Client = client;
            this.requestBuilder = requestBuilder;
        }

        /// <inheritdoc />
        Task<List<string>> TftClient.GetListHistoryAsync(string authorization, string encryptedPUUID)
        {
            var arguments = new object[] { authorization, encryptedPUUID };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetListHistoryAsync", new Type[] { typeof(string), typeof(string) });
            return (Task<List<string>>)func(Client, arguments);
        }
    }
}
